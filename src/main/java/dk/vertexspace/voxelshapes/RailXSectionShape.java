package dk.vertexspace.voxelshapes;
import net.minecraft.block.Block;
import net.minecraft.util.math.shapes.IBooleanFunction;
import net.minecraft.util.math.shapes.VoxelShape;
import net.minecraft.util.math.shapes.VoxelShapes;
import java.util.stream.Stream;

public class RailXSectionShape {
	private RailXSectionShape(){}
	public static final VoxelShape S_UP = Stream.of(
		Block.makeCuboidShape(10, 0, 6, 14, 1, 10),
		Block.makeCuboidShape(2, 0, 6, 6, 1, 10),
		Block.makeCuboidShape(2, 0, 14, 6, 1, 16),
		Block.makeCuboidShape(10, 0, 14, 14, 1, 16),
		Block.makeCuboidShape(10, 0, 0, 14, 1, 2),
		Block.makeCuboidShape(2, 0, 0, 6, 1, 2),
		Block.makeCuboidShape(0, 0, 2, 16, 1, 6),
		Block.makeCuboidShape(0, 0, 10, 16, 1, 14),
		Block.makeCuboidShape(12, 1, 0, 13, 2, 16),
		Block.makeCuboidShape(3, 1, 0, 4, 2, 16),
		Block.makeCuboidShape(4, 2, 14, 5, 3, 16),
		Block.makeCuboidShape(11, 2, 14, 12, 3, 16),
		Block.makeCuboidShape(4, 2, 6, 5, 3, 10),
		Block.makeCuboidShape(11, 2, 6, 12, 3, 10),
		Block.makeCuboidShape(4, 2, 0, 5, 3, 2),
		Block.makeCuboidShape(12, 2, 6, 13, 3, 10),
		Block.makeCuboidShape(3, 2, 6, 4, 3, 10),
		Block.makeCuboidShape(0, 2, 11, 2, 3, 12),
		Block.makeCuboidShape(14, 2, 11, 16, 3, 12),
		Block.makeCuboidShape(11, 1, 0, 12, 2, 16),
		Block.makeCuboidShape(4, 1, 0, 5, 2, 16),
		Block.makeCuboidShape(3, 2, 0, 4, 3, 2),
		Block.makeCuboidShape(12, 2, 0, 13, 3, 2),
		Block.makeCuboidShape(3, 2, 14, 4, 3, 16),
		Block.makeCuboidShape(12, 2, 14, 13, 3, 16),
		Block.makeCuboidShape(11, 2, 0, 12, 3, 2),
		Block.makeCuboidShape(5, 1, 4, 11, 2, 5),
		Block.makeCuboidShape(5, 1, 12, 11, 2, 13),
		Block.makeCuboidShape(5, 1, 3, 11, 2, 4),
		Block.makeCuboidShape(5, 1, 11, 11, 2, 12),
		Block.makeCuboidShape(13, 1, 4, 16, 2, 5),
		Block.makeCuboidShape(0, 1, 4, 3, 2, 5),
		Block.makeCuboidShape(13, 1, 11, 16, 2, 12),
		Block.makeCuboidShape(0, 1, 11, 3, 2, 12),
		Block.makeCuboidShape(0, 1, 12, 3, 2, 13),
		Block.makeCuboidShape(13, 1, 12, 16, 2, 13),
		Block.makeCuboidShape(0, 1, 3, 3, 2, 4),
		Block.makeCuboidShape(13, 1, 3, 16, 2, 4),
		Block.makeCuboidShape(0, 2, 12, 2, 3, 13),
		Block.makeCuboidShape(0, 2, 3, 2, 3, 4),
		Block.makeCuboidShape(14, 2, 12, 16, 3, 13),
		Block.makeCuboidShape(14, 2, 3, 16, 3, 4),
		Block.makeCuboidShape(6, 2, 12, 10, 3, 13),
		Block.makeCuboidShape(6, 2, 3, 10, 3, 4),
		Block.makeCuboidShape(6, 2, 4, 10, 3, 5),
		Block.makeCuboidShape(6, 2, 11, 10, 3, 12),
		Block.makeCuboidShape(0, 2, 4, 2, 3, 5),
		Block.makeCuboidShape(14, 2, 4, 16, 3, 5)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
	public static final VoxelShape S_DOWN = Stream.of(
		Block.makeCuboidShape(10, 15, 6, 14, 16, 10),
		Block.makeCuboidShape(2, 15, 6, 6, 16, 10),
		Block.makeCuboidShape(2, 15, 0, 6, 16, 2),
		Block.makeCuboidShape(10, 15, 0, 14, 16, 2),
		Block.makeCuboidShape(10, 15, 14, 14, 16, 16),
		Block.makeCuboidShape(2, 15, 14, 6, 16, 16),
		Block.makeCuboidShape(0, 15, 10, 16, 16, 14),
		Block.makeCuboidShape(0, 15, 2, 16, 16, 6),
		Block.makeCuboidShape(12, 14, 0, 13, 15, 16),
		Block.makeCuboidShape(3, 14, 0, 4, 15, 16),
		Block.makeCuboidShape(4, 13, 0, 5, 14, 2),
		Block.makeCuboidShape(11, 13, 0, 12, 14, 2),
		Block.makeCuboidShape(4, 13, 6, 5, 14, 10),
		Block.makeCuboidShape(11, 13, 6, 12, 14, 10),
		Block.makeCuboidShape(4, 13, 14, 5, 14, 16),
		Block.makeCuboidShape(12, 13, 6, 13, 14, 10),
		Block.makeCuboidShape(3, 13, 6, 4, 14, 10),
		Block.makeCuboidShape(0, 13, 4, 2, 14, 5),
		Block.makeCuboidShape(14, 13, 4, 16, 14, 5),
		Block.makeCuboidShape(11, 14, 0, 12, 15, 16),
		Block.makeCuboidShape(4, 14, 0, 5, 15, 16),
		Block.makeCuboidShape(3, 13, 14, 4, 14, 16),
		Block.makeCuboidShape(12, 13, 14, 13, 14, 16),
		Block.makeCuboidShape(3, 13, 0, 4, 14, 2),
		Block.makeCuboidShape(12, 13, 0, 13, 14, 2),
		Block.makeCuboidShape(11, 13, 14, 12, 14, 16),
		Block.makeCuboidShape(5, 14, 11, 11, 15, 12),
		Block.makeCuboidShape(5, 14, 3, 11, 15, 4),
		Block.makeCuboidShape(5, 14, 12, 11, 15, 13),
		Block.makeCuboidShape(5, 14, 4, 11, 15, 5),
		Block.makeCuboidShape(13, 14, 11, 16, 15, 12),
		Block.makeCuboidShape(0, 14, 11, 3, 15, 12),
		Block.makeCuboidShape(13, 14, 4, 16, 15, 5),
		Block.makeCuboidShape(0, 14, 4, 3, 15, 5),
		Block.makeCuboidShape(0, 14, 3, 3, 15, 4),
		Block.makeCuboidShape(13, 14, 3, 16, 15, 4),
		Block.makeCuboidShape(0, 14, 12, 3, 15, 13),
		Block.makeCuboidShape(13, 14, 12, 16, 15, 13),
		Block.makeCuboidShape(0, 13, 3, 2, 14, 4),
		Block.makeCuboidShape(0, 13, 12, 2, 14, 13),
		Block.makeCuboidShape(14, 13, 3, 16, 14, 4),
		Block.makeCuboidShape(14, 13, 12, 16, 14, 13),
		Block.makeCuboidShape(6, 13, 3, 10, 14, 4),
		Block.makeCuboidShape(6, 13, 12, 10, 14, 13),
		Block.makeCuboidShape(6, 13, 11, 10, 14, 12),
		Block.makeCuboidShape(6, 13, 4, 10, 14, 5),
		Block.makeCuboidShape(0, 13, 11, 2, 14, 12),
		Block.makeCuboidShape(14, 13, 11, 16, 14, 12)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
	public static final VoxelShape S_NORTH = Stream.of(
		Block.makeCuboidShape(10, 6, 15, 14, 10, 16),
		Block.makeCuboidShape(2, 6, 15, 6, 10, 16),
		Block.makeCuboidShape(2, 14, 15, 6, 16, 16),
		Block.makeCuboidShape(10, 14, 15, 14, 16, 16),
		Block.makeCuboidShape(10, 0, 15, 14, 2, 16),
		Block.makeCuboidShape(2, 0, 15, 6, 2, 16),
		Block.makeCuboidShape(0, 2, 15, 16, 6, 16),
		Block.makeCuboidShape(0, 10, 15, 16, 14, 16),
		Block.makeCuboidShape(12, 0, 14, 13, 16, 15),
		Block.makeCuboidShape(3, 0, 14, 4, 16, 15),
		Block.makeCuboidShape(4, 14, 13, 5, 16, 14),
		Block.makeCuboidShape(11, 14, 13, 12, 16, 14),
		Block.makeCuboidShape(4, 6, 13, 5, 10, 14),
		Block.makeCuboidShape(11, 6, 13, 12, 10, 14),
		Block.makeCuboidShape(4, 0, 13, 5, 2, 14),
		Block.makeCuboidShape(12, 6, 13, 13, 10, 14),
		Block.makeCuboidShape(3, 6, 13, 4, 10, 14),
		Block.makeCuboidShape(0, 11, 13, 2, 12, 14),
		Block.makeCuboidShape(14, 11, 13, 16, 12, 14),
		Block.makeCuboidShape(11, 0, 14, 12, 16, 15),
		Block.makeCuboidShape(4, 0, 14, 5, 16, 15),
		Block.makeCuboidShape(3, 0, 13, 4, 2, 14),
		Block.makeCuboidShape(12, 0, 13, 13, 2, 14),
		Block.makeCuboidShape(3, 14, 13, 4, 16, 14),
		Block.makeCuboidShape(12, 14, 13, 13, 16, 14),
		Block.makeCuboidShape(11, 0, 13, 12, 2, 14),
		Block.makeCuboidShape(5, 4, 14, 11, 5, 15),
		Block.makeCuboidShape(5, 12, 14, 11, 13, 15),
		Block.makeCuboidShape(5, 3, 14, 11, 4, 15),
		Block.makeCuboidShape(5, 11, 14, 11, 12, 15),
		Block.makeCuboidShape(13, 4, 14, 16, 5, 15),
		Block.makeCuboidShape(0, 4, 14, 3, 5, 15),
		Block.makeCuboidShape(13, 11, 14, 16, 12, 15),
		Block.makeCuboidShape(0, 11, 14, 3, 12, 15),
		Block.makeCuboidShape(0, 12, 14, 3, 13, 15),
		Block.makeCuboidShape(13, 12, 14, 16, 13, 15),
		Block.makeCuboidShape(0, 3, 14, 3, 4, 15),
		Block.makeCuboidShape(13, 3, 14, 16, 4, 15),
		Block.makeCuboidShape(0, 12, 13, 2, 13, 14),
		Block.makeCuboidShape(0, 3, 13, 2, 4, 14),
		Block.makeCuboidShape(14, 12, 13, 16, 13, 14),
		Block.makeCuboidShape(14, 3, 13, 16, 4, 14),
		Block.makeCuboidShape(6, 12, 13, 10, 13, 14),
		Block.makeCuboidShape(6, 3, 13, 10, 4, 14),
		Block.makeCuboidShape(6, 4, 13, 10, 5, 14),
		Block.makeCuboidShape(6, 11, 13, 10, 12, 14),
		Block.makeCuboidShape(0, 4, 13, 2, 5, 14),
		Block.makeCuboidShape(14, 4, 13, 16, 5, 14)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
	public static final VoxelShape S_SOUTH = Stream.of(
		Block.makeCuboidShape(10, 6, 0, 14, 10, 1),
		Block.makeCuboidShape(2, 6, 0, 6, 10, 1),
		Block.makeCuboidShape(2, 0, 0, 6, 2, 1),
		Block.makeCuboidShape(10, 0, 0, 14, 2, 1),
		Block.makeCuboidShape(10, 14, 0, 14, 16, 1),
		Block.makeCuboidShape(2, 14, 0, 6, 16, 1),
		Block.makeCuboidShape(0, 10, 0, 16, 14, 1),
		Block.makeCuboidShape(0, 2, 0, 16, 6, 1),
		Block.makeCuboidShape(12, 0, 1, 13, 16, 2),
		Block.makeCuboidShape(3, 0, 1, 4, 16, 2),
		Block.makeCuboidShape(4, 0, 2, 5, 2, 3),
		Block.makeCuboidShape(11, 0, 2, 12, 2, 3),
		Block.makeCuboidShape(4, 6, 2, 5, 10, 3),
		Block.makeCuboidShape(11, 6, 2, 12, 10, 3),
		Block.makeCuboidShape(4, 14, 2, 5, 16, 3),
		Block.makeCuboidShape(12, 6, 2, 13, 10, 3),
		Block.makeCuboidShape(3, 6, 2, 4, 10, 3),
		Block.makeCuboidShape(0, 4, 2, 2, 5, 3),
		Block.makeCuboidShape(14, 4, 2, 16, 5, 3),
		Block.makeCuboidShape(11, 0, 1, 12, 16, 2),
		Block.makeCuboidShape(4, 0, 1, 5, 16, 2),
		Block.makeCuboidShape(3, 14, 2, 4, 16, 3),
		Block.makeCuboidShape(12, 14, 2, 13, 16, 3),
		Block.makeCuboidShape(3, 0, 2, 4, 2, 3),
		Block.makeCuboidShape(12, 0, 2, 13, 2, 3),
		Block.makeCuboidShape(11, 14, 2, 12, 16, 3),
		Block.makeCuboidShape(5, 11, 1, 11, 12, 2),
		Block.makeCuboidShape(5, 3, 1, 11, 4, 2),
		Block.makeCuboidShape(5, 12, 1, 11, 13, 2),
		Block.makeCuboidShape(5, 4, 1, 11, 5, 2),
		Block.makeCuboidShape(13, 11, 1, 16, 12, 2),
		Block.makeCuboidShape(0, 11, 1, 3, 12, 2),
		Block.makeCuboidShape(13, 4, 1, 16, 5, 2),
		Block.makeCuboidShape(0, 4, 1, 3, 5, 2),
		Block.makeCuboidShape(0, 3, 1, 3, 4, 2),
		Block.makeCuboidShape(13, 3, 1, 16, 4, 2),
		Block.makeCuboidShape(0, 12, 1, 3, 13, 2),
		Block.makeCuboidShape(13, 12, 1, 16, 13, 2),
		Block.makeCuboidShape(0, 3, 2, 2, 4, 3),
		Block.makeCuboidShape(0, 12, 2, 2, 13, 3),
		Block.makeCuboidShape(14, 3, 2, 16, 4, 3),
		Block.makeCuboidShape(14, 12, 2, 16, 13, 3),
		Block.makeCuboidShape(6, 3, 2, 10, 4, 3),
		Block.makeCuboidShape(6, 12, 2, 10, 13, 3),
		Block.makeCuboidShape(6, 11, 2, 10, 12, 3),
		Block.makeCuboidShape(6, 4, 2, 10, 5, 3),
		Block.makeCuboidShape(0, 11, 2, 2, 12, 3),
		Block.makeCuboidShape(14, 11, 2, 16, 12, 3)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
	public static final VoxelShape S_WEST = Stream.of(
		Block.makeCuboidShape(15, 10, 6, 16, 14, 10),
		Block.makeCuboidShape(15, 2, 6, 16, 6, 10),
		Block.makeCuboidShape(15, 2, 14, 16, 6, 16),
		Block.makeCuboidShape(15, 10, 14, 16, 14, 16),
		Block.makeCuboidShape(15, 10, 0, 16, 14, 2),
		Block.makeCuboidShape(15, 2, 0, 16, 6, 2),
		Block.makeCuboidShape(15, 0, 2, 16, 16, 6),
		Block.makeCuboidShape(15, 0, 10, 16, 16, 14),
		Block.makeCuboidShape(14, 12, 0, 15, 13, 16),
		Block.makeCuboidShape(14, 3, 0, 15, 4, 16),
		Block.makeCuboidShape(13, 4, 14, 14, 5, 16),
		Block.makeCuboidShape(13, 11, 14, 14, 12, 16),
		Block.makeCuboidShape(13, 4, 6, 14, 5, 10),
		Block.makeCuboidShape(13, 11, 6, 14, 12, 10),
		Block.makeCuboidShape(13, 4, 0, 14, 5, 2),
		Block.makeCuboidShape(13, 12, 6, 14, 13, 10),
		Block.makeCuboidShape(13, 3, 6, 14, 4, 10),
		Block.makeCuboidShape(13, 0, 11, 14, 2, 12),
		Block.makeCuboidShape(13, 14, 11, 14, 16, 12),
		Block.makeCuboidShape(14, 11, 0, 15, 12, 16),
		Block.makeCuboidShape(14, 4, 0, 15, 5, 16),
		Block.makeCuboidShape(13, 3, 0, 14, 4, 2),
		Block.makeCuboidShape(13, 12, 0, 14, 13, 2),
		Block.makeCuboidShape(13, 3, 14, 14, 4, 16),
		Block.makeCuboidShape(13, 12, 14, 14, 13, 16),
		Block.makeCuboidShape(13, 11, 0, 14, 12, 2),
		Block.makeCuboidShape(14, 5, 4, 15, 11, 5),
		Block.makeCuboidShape(14, 5, 12, 15, 11, 13),
		Block.makeCuboidShape(14, 5, 3, 15, 11, 4),
		Block.makeCuboidShape(14, 5, 11, 15, 11, 12),
		Block.makeCuboidShape(14, 13, 4, 15, 16, 5),
		Block.makeCuboidShape(14, 0, 4, 15, 3, 5),
		Block.makeCuboidShape(14, 13, 11, 15, 16, 12),
		Block.makeCuboidShape(14, 0, 11, 15, 3, 12),
		Block.makeCuboidShape(14, 0, 12, 15, 3, 13),
		Block.makeCuboidShape(14, 13, 12, 15, 16, 13),
		Block.makeCuboidShape(14, 0, 3, 15, 3, 4),
		Block.makeCuboidShape(14, 13, 3, 15, 16, 4),
		Block.makeCuboidShape(13, 0, 12, 14, 2, 13),
		Block.makeCuboidShape(13, 0, 3, 14, 2, 4),
		Block.makeCuboidShape(13, 14, 12, 14, 16, 13),
		Block.makeCuboidShape(13, 14, 3, 14, 16, 4),
		Block.makeCuboidShape(13, 6, 12, 14, 10, 13),
		Block.makeCuboidShape(13, 6, 3, 14, 10, 4),
		Block.makeCuboidShape(13, 6, 4, 14, 10, 5),
		Block.makeCuboidShape(13, 6, 11, 14, 10, 12),
		Block.makeCuboidShape(13, 0, 4, 14, 2, 5),
		Block.makeCuboidShape(13, 14, 4, 14, 16, 5)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
	public static final VoxelShape S_EAST = Stream.of(
		Block.makeCuboidShape(0, 2, 6, 1, 6, 10),
		Block.makeCuboidShape(0, 10, 6, 1, 14, 10),
		Block.makeCuboidShape(0, 10, 14, 1, 14, 16),
		Block.makeCuboidShape(0, 2, 14, 1, 6, 16),
		Block.makeCuboidShape(0, 2, 0, 1, 6, 2),
		Block.makeCuboidShape(0, 10, 0, 1, 14, 2),
		Block.makeCuboidShape(0, 0, 2, 1, 16, 6),
		Block.makeCuboidShape(0, 0, 10, 1, 16, 14),
		Block.makeCuboidShape(1, 3, 0, 2, 4, 16),
		Block.makeCuboidShape(1, 12, 0, 2, 13, 16),
		Block.makeCuboidShape(2, 11, 14, 3, 12, 16),
		Block.makeCuboidShape(2, 4, 14, 3, 5, 16),
		Block.makeCuboidShape(2, 11, 6, 3, 12, 10),
		Block.makeCuboidShape(2, 4, 6, 3, 5, 10),
		Block.makeCuboidShape(2, 11, 0, 3, 12, 2),
		Block.makeCuboidShape(2, 3, 6, 3, 4, 10),
		Block.makeCuboidShape(2, 12, 6, 3, 13, 10),
		Block.makeCuboidShape(2, 14, 11, 3, 16, 12),
		Block.makeCuboidShape(2, 0, 11, 3, 2, 12),
		Block.makeCuboidShape(1, 4, 0, 2, 5, 16),
		Block.makeCuboidShape(1, 11, 0, 2, 12, 16),
		Block.makeCuboidShape(2, 12, 0, 3, 13, 2),
		Block.makeCuboidShape(2, 3, 0, 3, 4, 2),
		Block.makeCuboidShape(2, 12, 14, 3, 13, 16),
		Block.makeCuboidShape(2, 3, 14, 3, 4, 16),
		Block.makeCuboidShape(2, 4, 0, 3, 5, 2),
		Block.makeCuboidShape(1, 5, 4, 2, 11, 5),
		Block.makeCuboidShape(1, 5, 12, 2, 11, 13),
		Block.makeCuboidShape(1, 5, 3, 2, 11, 4),
		Block.makeCuboidShape(1, 5, 11, 2, 11, 12),
		Block.makeCuboidShape(1, 0, 4, 2, 3, 5),
		Block.makeCuboidShape(1, 13, 4, 2, 16, 5),
		Block.makeCuboidShape(1, 0, 11, 2, 3, 12),
		Block.makeCuboidShape(1, 13, 11, 2, 16, 12),
		Block.makeCuboidShape(1, 13, 12, 2, 16, 13),
		Block.makeCuboidShape(1, 0, 12, 2, 3, 13),
		Block.makeCuboidShape(1, 13, 3, 2, 16, 4),
		Block.makeCuboidShape(1, 0, 3, 2, 3, 4),
		Block.makeCuboidShape(2, 14, 12, 3, 16, 13),
		Block.makeCuboidShape(2, 14, 3, 3, 16, 4),
		Block.makeCuboidShape(2, 0, 12, 3, 2, 13),
		Block.makeCuboidShape(2, 0, 3, 3, 2, 4),
		Block.makeCuboidShape(2, 6, 12, 3, 10, 13),
		Block.makeCuboidShape(2, 6, 3, 3, 10, 4),
		Block.makeCuboidShape(2, 6, 4, 3, 10, 5),
		Block.makeCuboidShape(2, 6, 11, 3, 10, 12),
		Block.makeCuboidShape(2, 14, 4, 3, 16, 5),
		Block.makeCuboidShape(2, 0, 4, 3, 2, 5)).reduce((v1, v2) -> VoxelShapes.combineAndSimplify(v1, v2, IBooleanFunction.OR)).get();
}